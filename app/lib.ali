;; not
(definisi (negasi x)
    (jika x
        #salah
        #benar))

;; null?
(definisi (nihil? obj)
    (jika (sama? obj '())
        #benar
        #salah))

;; list
(definisi (lis . objs)
    objs)

(definisi (id obj)
    obj)

;; flip
(definisi (balik fn)
    (fungsi (arg1 arg2)
        (fn arg2 arg1)))

(definisi (parsial fn arg1)
    (fungsi (arg)
        (terapkan fn (kons arg1 (lis arg)))))

(definisi (komposisi f g)
    (fungsi (arg)
        (f (terapkan g arg))))

(definisi nol?
    (parsial = 0))

(definisi positif?
    (parsial < 0))

(definisi negatif?
    (parsial > 0))

(definisi (ganjil? angka)
    (= (mod angka 2) 1))

(definisi (genap? angka)
    (= (mod angka 2) 0))

(definisi (lipat-ka fn akumulator lis)
    (jika (nihil? lis)
        akumulator
        (fn (kepala lis) (lipat-ka fn akumulator (badan lis)))))

(definisi (lipat-ki fn akumulator lis)
    (jika (nihil? lis)
        akumulator
        (lipat-ki fn (fn akumulator (kepala lis)) (badan lis))))

(definisi lipat lipat-ki)
(definisi rangkum lipat)

(definisi (uraikan fn init pred)
    (jika (pred init)
        (kons init '())
        (kons init (uraikan fn (fn init) pred))))

(definisi (jumlahkan . lis)
    (lipat + 0 lis))

(definisi (kalikan . lis)
    (lipat * 1 lis))

(definisi (dan . lis)
    (lipat && #benar lis))

(definisi (atau . lis)
    (lipat || #salah lis))

(definisi (maksimum lis)
    (lipat (fungsi (n-lama n-baru)
                (jika (> n-lama n-baru)
                    n-lama 
                    n-baru))
            (kepala lis)
            (badan lis)))

(definisi (minimum lis)
    (lipat (fungsi (n-lama n-baru)
                (jika (< n-lama n-baru)
                    n-lama 
                    n-baru))
            (kepala lis)
            (badan lis)))

(definisi (panjang lis)
    (lipat (fungsi (x y) (+ x 1))
            0
            lis))

(definisi (putar-balik lis)
    (lipat (balik kons) '() lis))
